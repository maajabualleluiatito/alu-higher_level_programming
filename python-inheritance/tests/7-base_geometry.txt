$ cat tests/7-base_geometry.txt
#!/usr/bin/python3
import unittest
import sys
import io
from models.base_geometry import BaseGeometry

class TestBaseGeometry(unittest.TestCase):
    def setUp(self):
        self.bg = BaseGeometry()

    def test_area(self):
        with self.assertRaises(Exception) as context:
            self.bg.area()
        self.assertEqual(str(context.exception), "area() is not implemented")

    def test_integer_validator_valid(self):
        # Test valid integer input
        self.assertIsNone(self.bg.integer_validator("test", 5))

    def test_integer_validator_type_error(self):
        # Test type error for non-integer input
        with self.assertRaises(TypeError) as context:
            self.bg.integer_validator("test", "string")
        self.assertEqual(str(context.exception), "test must be an integer")

    def test_integer_validator_value_error(self):
        # Test value error for non-positive integer input
        with self.assertRaises(ValueError) as context:
            self.bg.integer_validator("test", 0)
        self.assertEqual(str(context.exception), "test must be greater than 0")

if __name__ == "__main__":
    unittest.main()


